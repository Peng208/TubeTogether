{"version":3,"sources":["app.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","Array","isArray","Object","TypeError","window","YT2gether","stopInit","event","startAt","location","search","_search","substr","_uq","split","forEach","listId","list","chatroom","_deltaTime","Date","countdownTimer","calcRemainingTime","_timeBase","clearTimeout","refeshTimer","roughTime","time","timeBase","map","base","idx","timeLimitation","t","timeUnit","document","documentElement","setAttribute","setTimeout","reload","fetch","then","response","json","posts","test","body","match","content","confirm","href","API_KEY","YOUTUBE_API_URL","DURATION_UNIT","H","M","S","initChatroom","chatIframe","createElement","src","appendChild","initYoutube","res","data","items","item","contentDetails","videoId","join","listString","durations","duration","dura","_dura$match","_dura$match2","unit","reduce","a","b","_durationsTempSum","durationsStack","totalDuration","slice","timer","deltaTime","startTime","player","YT","Player","playerVars","listType","autoplay","start","state","index"],"mappings":"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","file":"app.js","sourcesContent":["/* globals YT, fetch, YT2gether, location */\n\nwindow.YT2gether = {\n  stopInit: false,\n  event: 'postCSS',\n  startAt: null\n};\n\n// get event info\nif (location.search.length) {\n  let _search = location.search.substr(1);\n\n  let _uq = {};\n  _search.split(/&/).forEach((i) => {\n    _uq[i.split(/=/)[0]] = i.split(/=/)[1] || '';\n  });\n\n  YT2gether.startAt = _uq.startAt;\n  YT2gether.listId = _uq.list;\n  YT2gether.chatroom = _uq.chatroom || 'https://gitter.im/f2etw/TubeTogether/~chat';\n\n  let _deltaTime = new Date(YT2gether.startAt) - new Date();\n  let countdownTimer;\n  let calcRemainingTime = () => {\n    let _timeBase;\n\n    _deltaTime = (new Date(YT2gether.startAt) - new Date()) / 1e3;\n\n    clearTimeout(YT2gether.refeshTimer);\n    countdownTimer.roughTime = null;\n\n    countdownTimer.time = countdownTimer.timeBase.map((base, idx) => {\n      return _deltaTime / base % countdownTimer.timeLimitation[idx] | 0;\n    });\n\n    countdownTimer.time.forEach((t, i) => {\n      if (!countdownTimer.roughTime && t) {\n        _timeBase = countdownTimer.timeBase[i];\n        countdownTimer.roughTime = t + countdownTimer.timeUnit[i];\n      }\n    });\n\n    document.documentElement.setAttribute('data-countdown', 'Start after ~' + countdownTimer.roughTime);\n\n    if (_deltaTime < 60 * 1) {\n      YT2gether.refeshTimer = setTimeout(() => {\n        location.reload();\n      }, _deltaTime * 1e3);\n    } else {\n      YT2gether.refeshTimer = setTimeout(() => {\n        calcRemainingTime();\n      }, _timeBase * 200);\n    }\n  };\n\n  // not begun yet\n  if (_deltaTime > 0) {\n    countdownTimer = {\n      timeUnit: 'dhms',\n      timeBase: [60 * 60 * 24, 60 * 60, 60, 1],\n      timeLimitation: [3650, 24, 60, 60]\n    };\n\n    calcRemainingTime();\n  }\n} else {\n  YT2gether.stopInit = true;\n\n  // update info from github issue\n  fetch('https://api.github.com/repos/f2etw/TubeTogether/issues?labels=living&state=open').then((response) => {\n    return response.json();\n  })\n  .then((posts) => {\n    if (/^\\?/.test(posts[0].body)) {\n      location.search = posts[0].body.match(/^\\?.+/)[0];\n    }\n  })\n  .catch((content) => {\n    if (window.confirm('GG 惹，請問要去 GitHub issue 確認一下有沒有新活動嗎？')) {\n      location.href = 'https://github.com/f2etw/TubeTogether/labels/living';\n    }\n    return 'GG';\n  });\n}\n\nconst API_KEY = 'AIzaSyDyZ231vqsztOc_f2rKwyedUOY9eEnq2lU';\nconst YOUTUBE_API_URL = 'https://www.googleapis.com/youtube/v3';\n\nconst DURATION_UNIT = {\n  'H': 60 * 60,\n  'M': 60,\n  'S': 1\n};\n\nYT2gether.initChatroom = () => {\n  if (YT2gether.stopInit || YT2gether.chatroom === 'none') { return; }\n\n  let chatIframe = document.createElement('iframe');\n  chatIframe.src = YT2gether.chatroom;\n  document.body.appendChild(chatIframe);\n};\n\nYT2gether.initYoutube = () => {\n  if (YT2gether.stopInit) { return; }\n\n  fetch(`${YOUTUBE_API_URL}/playlistItems?part=contentDetails&maxResults=50&playlistId=${YT2gether.listId}&key=${API_KEY}`)\n    .then((res) => {\n      return res.json();\n    })\n    .then((data) => {\n      return data.items.map((item) => {\n        return item.contentDetails.videoId;\n      }).join();\n    })\n    .then((listString) => {\n      return fetch(`${YOUTUBE_API_URL}/videos?part=contentDetails&maxResults=50&id=${listString}&key=${API_KEY}`)\n        .then((res) => {\n          return res.json();\n        });\n    })\n    .then((data) => {\n      let durations = data.items.map((item) => {\n        return item.contentDetails.duration.match(/\\d+\\w/gi).map((dura) => {\n          let [, time, unit] = dura.match(/(\\d+)(\\w)/);\n          return time * DURATION_UNIT[unit];\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      });\n\n      let _durationsTempSum = 0;\n      let durationsStack = durations.map((time) => {\n        _durationsTempSum += time;\n        return _durationsTempSum;\n      });\n\n      let totalDuration = durationsStack.slice(-1)[0];\n\n      let timer = {};\n      timer.deltaTime = (new Date() - new Date(YT2gether.startAt)) / 1e3 | 0;\n\n      // if event was over or not yet begun\n      if (timer.deltaTime < 0 || totalDuration < timer.deltaTime) {\n        return;\n      }\n\n      let i = durationsStack.length - 1;\n      for (; i >= 0; i--) {\n        if (timer.deltaTime > durationsStack[i]) {\n          timer.startTime = timer.deltaTime - durationsStack[i];\n          break;\n        }\n      }\n\n      YT2gether.player = new YT.Player('player', {\n        playerVars: {\n          listType: 'playlist',\n          list: YT2gether.listId,\n          autoplay: 1,\n          start: timer.startTime,\n          state: 1,\n          index: i\n        }\n      });\n    });\n};\n\nYT2gether.initChatroom();\nYT2gether.initYoutube();\n"],"sourceRoot":"/source/"}